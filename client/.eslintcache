[{"/Users/laurelgalaty/Desktop/MVP/client/src/App.js":"1","/Users/laurelgalaty/Desktop/MVP/client/src/pages/landingpage/LandingPage.js":"2","/Users/laurelgalaty/Desktop/MVP/client/src/index.js":"3","/Users/laurelgalaty/Desktop/MVP/client/src/reportWebVitals.js":"4","/Users/laurelgalaty/Desktop/MVP/client/src/context/AppContext.js":"5","/Users/laurelgalaty/Desktop/MVP/client/src/pages/login/Login.js":"6"},{"size":560,"mtime":1613597933202,"results":"7","hashOfConfig":"8"},{"size":860,"mtime":1612658021184,"results":"9","hashOfConfig":"8"},{"size":548,"mtime":1612806849232,"results":"10","hashOfConfig":"8"},{"size":362,"mtime":1609365990498,"results":"11","hashOfConfig":"8"},{"size":838,"mtime":1613600325619,"results":"12","hashOfConfig":"8"},{"size":3077,"mtime":1613922957089,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yeo95p",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/Users/laurelgalaty/Desktop/MVP/client/src/App.js",[],"/Users/laurelgalaty/Desktop/MVP/client/src/pages/landingpage/LandingPage.js",["30"],"import React from 'react';\nimport graphic from './assets/hands.png';\nimport './LandingPage.css';\n\nconst LandingPage = () => {\n  return (\n    <div className='body'>\n      <div className='blue-cover'>\n        <div className='text-container'>\n          <p className='coming-soon'>Coming Soon</p>\n          <h1 className='header'>\n            Make It <span className='mvp'>MVP</span>\n          </h1>\n          <h3 className='description'>\n            A place where ideas and bootcamp grads unite to create meaningful\n            viable products\n          </h3>\n          <p className='more-information'>For more information:</p>\n          <a href='mailto:mvp@makeitmvp.com' className='email'>\n            mvp@makeitmvp.com\n          </a>\n        </div>\n        <img src={graphic} className='graphic' />\n      </div>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","/Users/laurelgalaty/Desktop/MVP/client/src/index.js",[],["31","32"],"/Users/laurelgalaty/Desktop/MVP/client/src/reportWebVitals.js",[],["33","34"],"/Users/laurelgalaty/Desktop/MVP/client/src/context/AppContext.js",[],"/Users/laurelgalaty/Desktop/MVP/client/src/pages/login/Login.js",["35","36"],"import React, { useState, useContext } from 'react';\nimport { AppContext } from '../../context/AppContext.js';\nimport { useHistory, Link } from 'react-router-dom';\nimport { Form, Button, Container, Row, Col, Image } from 'react-bootstrap';\nimport axios from 'axios';\nimport LoginImage from './assets/pana.png';\nimport GoogleLogo from './assets/google-logo.png';\nimport './Login.css';\n\nconst Login = () => {\n  const { setCurrentUser, setLoading } = useContext(AppContext);\n  const [formData, setFormData] = useState(null);\n  const history = useHistory();\n  const handleChange = e => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const response = await axios.post('/api/login', formData);\n      setCurrentUser(response.data);\n      sessionStorage.setItem('user', response.data);\n      history.push('/profile');\n    } catch (error) {\n      console.log('You logged in');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container fluid='false' className='login-container'>\n      <Row>\n        <Col>\n          <p className='welcome-back'>Welcome back</p>\n          <p className='login-heading'>Login to your account</p>\n          <Form className='login-form' onSubmit={handleLogin}>\n            <Form.Group className='username-group'>\n              <Form.Label className='username-label'>Email</Form.Label>\n              <Form.Control\n                id='email'\n                type='text'\n                name='email'\n                onChange={handleChange}\n                required\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label className='password-label'>Password</Form.Label>\n              <Form.Control\n                id='password'\n                type='password'\n                name='password'\n                onChange={handleChange}\n                required\n              />\n            </Form.Group>\n\n            <Form.Check inline label=\"Remember me\" type={'checkbox'} className=\"remember-me\" />\n\n            <Link className='forgot-password' to='/'>\n            {' '}\n            Forgot password?\n          </Link>\n            \n            <Form.Group className='login-button-div'>\n              <Button className='login-button' block type='submit'>\n                Log In\n              </Button>\n\n              \n              {/* <Button className='login-with-google-button' block type='submit'>\n                <img src={GoogleLogo} className='google-logo' />\n                Or sign-in with Google\n              </Button> */}\n\n              <a href=\"http://localhost:8000/api/google\"></a>\n            </Form.Group>\n          </Form>\n\n          <Link className='make-account-link' to='/sign-up'>\n            {' '}\n            Don't have an account?\n          </Link>\n        </Col>\n\n        <Col className='login-image-container'>\n          <Image src={LoginImage} fluid className='login-image' />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Login;\n",{"ruleId":"37","severity":1,"message":"38","line":23,"column":9,"nodeType":"39","endLine":23,"endColumn":50},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"40","replacedBy":"44"},{"ruleId":"42","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":7,"column":8,"nodeType":"48","messageId":"49","endLine":7,"endColumn":18},{"ruleId":"50","severity":1,"message":"51","line":80,"column":15,"nodeType":"39","endLine":80,"endColumn":58},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["52"],"no-negated-in-lhs",["53"],["52"],["53"],"no-unused-vars","'GoogleLogo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation"]